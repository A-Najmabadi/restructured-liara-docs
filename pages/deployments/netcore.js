import Layout from '../../components/Layout'
import Link from 'next/link'
import Head from 'next/head'

export default () => (
  <Layout>
    <Head>
      <title>سرویس ابری لیارا | مستندات استقرار برنامه‌های DotNetCore - ASP.Net Core deployment</title>
    </Head>

    <h1>استقرار برنامه‌های ASP.Net Core</h1>
    <p>
      برنامه‌ی شما باید دارای فایل
      <span className="code">.csproj</span>
      باشد تا بتواند در لیارا مستقر شود.
    </p>

    <h3>انتخاب نسخه‌ی ASP.Net Core</h3>
    <p>
      به‌صورت پیش‌فرض، برنامه‌ی شما روی نسخه‌ی ۳.۱ این پلتفرم اجرا می‌شود.
      می‌توانید یک فایل با نام
      {' '}
      <Link href="/clients/cli#liara-json-file" title="مستندات CLI">liara.json</Link>
      {' '}
      داخل برنامه‌ی‌تان بسازید و نسخه‌ی مدنظرتان را به شکل زیر تعیین کنید. سپس بعد از یک بار دیپلوی،
      برنامه‌ی شما روی نسخه‌ی تعیین شده اجرا خواهد شد.
    </p>
<pre>
  <code>
{`{
  "netcore": {
    "version": "3.1"
  }
}`}
  </code>
</pre>
    <p>
      در حال حاظر، از نسخه‌های زیر پشتیبانی می‌شود:
      <ul>
        <li>3.1</li>
        <li>3.0</li>
        <li>2.2</li>
        <li>2.1</li>
      </ul>
    </p>

    <h3>شروع عملیات استقرار</h3>
    <p>
      در ابتدا مطمئن شوید که
      <span className="code">@liara/cli</span>
      را روی کامپیوترتان نصب کرده‌اید.
      {' '}
      <Link href="/clients/cli" title="مستندات CLI">اطلاعات بیشتر</Link>
      <br/>
      سپس دستور زیر را داخل برنامه‌ی‌تان اجرا کنید:
    </p>
    <pre>
      <code>
        liara deploy
      </code>
    </pre>
    <p>
      لیارا به صورت خودکار، تشخیص خواهد داد که برنامه‌ی شما را باید به عنوان یک برنامه‌ی
      ASP.Net Core
      اجرا کند و عملیات استقرار را آغاز خواهد کرد. اما اگر مشکلی در تشخیص وجود داشت، می‌توانید از دستور زیر استفاده کنید:
    </p>
    <pre>
      <code>
        liara deploy --platform=netcore
      </code>
    </pre>

    <h3>پکیج‌ها به صورت خودکار نصب می‌شوند</h3>
    <p>
      لیارا به صورت خودکار پکیج‌های برنامه‌ی شما را نصب می‌کند.
      پس نیازی ندارید که به دنبال اجرای دستورات
      <span className="code">dotnet restore</span>
      باشید.
      از آن‌جایی که اجرای این دستورات زمان‌بر است، برای سرعت بیشتر، این دستورات را روی سرورهای قدرتمندمان اجرا می‌کنیم تا زمان زیادی را منتظر نمانید.
    </p>

    <h3>اتصال به دیتابیس</h3>
    <p>
      شما می‌توانید از بخش «دیتابیس‌ها»، یک دیتابیس
      MySQL یا MongoDB
      ایجاد کنید.
      بعد از ایجاد دیتابیس، در لیست دیتابیس‌ها، روی دیتابیس موردنظرتان کلیک کنید تا
      اطلاعات اتصال به آن برای‌تان نمایش داده شود.
      <br/>

      هر برنامه‌ای یک بخش تنظیمات دارد که از طریق آن می‌توانید متغیرهای لازم را برای برنامه تعریف کنید.
      (<Link href="/apps/environment-variables" title="مستندات متغیرها">اطلاعات بیشتر</Link>)

      <br/>
      شما می‌توانید به هر صورت که مایل هستید اطلاعات دیتابیس را به برنامه‌ی‌تان بدهید. ما پیشنهاد می‌کنیم
      متغیری مانند زیر را در بخش تنظیمات برنامه ایجاد و مقداردهی کنید:
    </p>
    <pre>
      <code>
{`DATABASE_URL=mysql://root:PASSWORD@HOST:PORT/my_database`}
      </code>
    </pre>
    <p>
      توجه کنید که متغیر بالا، صرفا جهت نمونه آورده شده و شما باید مقدار آن را با اطلاعات دیتابیسی که ساختید پر کنید.
      نکته‌ی دیگری که باید به آن توجه کنید این است که در مثال بالا، فرض بر این بوده است که شما به سرور دیتابیس‌تان متصل شده و یک دیتابیس با نام
      <span className="code">my_database</span>
      ساخته‌اید.
    </p>

    {/* TODO: More details */}
    <h3>ذخیره‌ی فایل‌ها</h3>
    <p>
      لیارا یک فضای ابری نامحدود برای ذخیره‌ی فایل‌هایتان در اختیار شما قرار می‌دهد.
      <br />
      فقط کافیست که SDK لیارا را در برنامه‌ی‌تان نصب کرده و شروع به استفاده کنید.
      {' '}
      <Link href="/storage/overview">اطلاعات بیشتر</Link>
      <br />
      همچنین می‌توانید یک volume تعریف کنید:
      {' '}
      <Link href="/apps/volumes">اطلاعات بیشتر</Link>
    </p>
  </Layout>
)
