import Head from "next/head";
import Link from "next/link";
import Layout from "../../components/Layout";
import Asciinema from "../../components/Asciinema";
import ZoomableImage from "../../components/ZoomableImage";

export default () => (
  <Layout>
    <Head>
      <title>مستندات فایل‌ سیستم - لیارا</title>
    </Head>

    <h1>فایل ‌سیستم لیارا</h1>
    <span className="page-description">(File System)</span>

    <p>
      <strong>فایل‌سیستم</strong> به ساختار و نظمی اشاره دارد که برای ذخیره،
      سازماندهی، و دسترسی به داده‌ها استفاده می‌شود. این ساختار تعیین کننده
      نحوه‌ی ذخیره‌سازی فایل‌ها و دایرکتوری‌ها، سطح دسترسی به آنها، و روابط بین
      آنها است. به عبارتی دیگر، فایل‌سیستم به کاربران و برنامه‌ها امکان می‌دهد
      تا با داده‌ها به صورت منظم و سازمان‌یافته، ارتباط برقرار کنند.
    </p>

    <ul>
      <li>
        <a href="#liara_filesystem">فایل‌سیستم لیارا</a>
      </li>
      <li>
        <a href="#tmp_directory">دایرکتوری tmp/</a>
      </li>
      <li>
        <a href="#disks">دیسک‌ها</a>
      </li>
      <li>
        <a href="#writable_filesystem">writable کردن فایل‌سیستم لیارا</a>
      </li>
      <li>
        <a href="#postgres">حداکثر فضای write در فایل سیستم writable</a>
      </li>
      <li>
        <a href="#postgres">پلتفرم‌های Docker و NextJS</a>
      </li>
    </ul>

    <h2 id="liara_filesystem">فایل‌سیستم لیارا</h2>

    <p>
      فایل‌سیستم برنامه‌های لیارا به صورت پیش‌فرض، پس از ایجاد برنامه، Read-Only
      یا فقط خواندنی است. به عبارتی، پس از استقرار برنامه‌ی خود در لیارا، فقط
      می‌توانید فایل‌ها و دایرکتوری‌ها را مشاهده کنید و امکان ایجاد هیچ‌گونه
      تغییری در آن‌ها وجود ندارد.
    </p>

    <p>
      این موضوع باعث افزایش امنیت و اطمینان برنامه‌تان می‌شود. چرا که اگر
      نفوذگری قصد ایجاد تغییری ویران‌گر در فایل‌های پروژه‌تان را داشته باشد، با
      شکست روبرو می‌شود.
    </p>
    <Asciinema id="readonly-file-system-error" />

    <p>
      بهترین روش برای آپدیت برنامه و ایجاد تغییرات در آن، این است که تغییرات در
      لوکال انجام و سپس در لیارا مستقر شوند. با توجه به این که لیارا تنها
      تغییرات جدید را منتقل می‌کند، پس جای نگرانی برای زمان‌بر بودن استقرار مجدد
      نیز، وجود ندارد.
    </p>

    <h2 id="tmp_directory">
      دایرکتوری <span className="code">/tmp</span>
    </h2>

    <p>
      با وجود Read-Only بودن فایل سیستم برنامه‌های لیارا، دایرکتوری
      <span className="code">/tmp</span> از این قاعده مستثنی است. می‌توانید از
      این دایرکتوری که در همه پلن‌های ارائه شده، فضایی برابر 100 مگابایت دارد،
      برای ذخیره سازی لاگ‌ها، فایل‌ها آپلودی موقتی و غیره استفاده کنید.
    </p>

    <h2 id="disks">دیسک‌ها</h2>
    <p>
      اگر که دایرکتوری <span className="code">/tmp</span> پاسخ‌گوی نیاز شما
      نبود، چاره کار استفاده از دیسک‌ها در برنامه‌تان می‌باشد. به طور مثال قصد
      ذخیره فایل‌های کاربران را دارید و نمی‌خواهید به هیچ وجه این فایل‌ها را حذف
      کنید. در این شرایط به قسمت دیسک‌ها در برنامه‌تان مراجعه کنید و اقدام به
      ایجاد دیسک کنید:{" "}
      <Link href="/storage/disks/about">اطلاعات بیشتر درباره‌ی دیسک‌ها </Link>
    </p>

    <h2 id="writable_filesystem">writable کردن فایل‌سیستم لیارا</h2>
    <p>
      همانطور که قبل‌تر گفته شد، فایل‌سیستم لیارا به صورت پیش‌فرض، بر روی
      read-only تنظیم شده است. اما شما می‌توانید به راحتی یک کلیک، فایل‌سیستم را
      از read-only به writable تغییر دهید.
    </p>
    <p>
      برای این کار، کافیست وارد قسمت تنظیمات برنامه خود شوید و سپس گزینه{" "}
      <strong>فایل‌سیستم Read Only</strong> را غیر فعال کنید:
    </p>
    <ZoomableImage src="https://files.liara.ir/docs/filesystem/disable-read-only-filesystem.gif" />
    <p>
      پس از انجام این‌کار، شما قادر خواهید بود تا تغییرات جدیدی رو بر روی پروژه،
      اعمال کنید:
    </p>
  </Layout>
);
